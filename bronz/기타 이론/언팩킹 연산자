*(언팩킹 연산자)
1. 변수 선언시

*x = 1, 2, 3 ,4 --> [1,2,3,4]

2. 함수의 가변인자

def func(*args):
    print(args)

함수에 func(*list), fun(*tuple)로 딕셔너리가 아닌 lterable 객체를 
언팩킹 연산자로 담으면 tuple로 들어간다.
fun(1,2,3)으로 담으면 args = (1,2,3) 이런 식으로 튜플로 들어감.

3. def func(**kwargs):
kwargs 가 딕셔너리 형태로 들어감.

def func(**kwargs):
    for key in kwargs:
        print(key,kwargs[key])

dic = {'1' : '윤혁', '2' : '태이', '3' : '서희'}

func(**dic)
''' 딕셔너리를 ** 언패킹 연산자 2개를 사용해서 담을 수 있다.
1 윤혁
2 태이
3 서희
'''

func(a = '윤혁', b  = '강현', c = '두산')
''' a, b, c는 key로 사용되는데 ''를 안씌워줘야 한다. 정수형태는 불가능!
a 윤혁
b 강현
c 두산

4. 프린트 할 떄
[1, 2, 3]이라는 리스트를

print([1, 2, 3]) --> print(*[1, 2, 3]) 이라고 하면
1 2 3 으로 리스트를 지우고 출력.